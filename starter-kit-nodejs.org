#+TITLE: Starter Kit NodeJS
#+OPTIONS: toc:nil num:nil ^:nil

This is part of the [[file:starter-kit.org][Emacs Starter Kit]].

* Starter kit NodeJS
  :PROPERTIES:
  :tangle:   yes
  :noweb:    yes
  :comments: noweb
  :END:

Support for the Node server-side JavaScript environment

** Check Dependencies

Determine whether required packages are installed. If not, use
cask/ELPA to install them.
#+begin_src emacs-lisp
  (starter-kit-install-if-needed 'nodejs-repl 'nvm)
#+end_src

** Enable JavaScript Mode for Server-Side Files

*** Select Mode
Select the "best" javascript mode based on what's available.

#+begin_src emacs-lisp
  (setq starter-kit-preferred-js-mode
        (if (require 'js2-mode nil t)
            'js2-mode
          'js-mode))
#+end_src

*** Set up Mode for Interpreters

For JavaScript, we want to use js2-mode for files with an extension
that would activate js-mode. And, we need js2-mode to be automatically
selected if we edit a file with a she-bang (#!) line that specifies a
JavaScript interpreter.

**** Function starter-kit-set-interpreter-mode
First, we need a function to perform surgery on global variable
'interpreter-mode-alist' to replace or add an interpreter/mode
association:

#+name: set-interpreter-mode
#+begin_src emacs-lisp :tangle yes
  (defun starter-kit-set-interpreter-mode (interpreter-string major-mode)
    "When a file's interpreter is INTERPRETER-STRING, set MAJOR-MODE.

  See Info node `(elisp)Auto Major Mode' and variable `interpreter-mode-alist'."
    (if (assoc interpreter-string interpreter-mode-alist)
        ;; already in list, replace its value
        (setf (cdr (assoc interpreter-string interpreter-mode-alist)) major-mode)
      ;; not in, so add it
      (setq interpreter-mode-alist
              (append interpreter-mode-alist
                      (list (cons interpreter-string major-mode))))))

#+end_src

**** Set Up Mode for Interpreters

Then, if js2-mode has loaded successfully, call the function for a
list of "known" JavaScript command-line interpreters. And, replace
associations for file extensions.

#+name: set-up-javascript
#+begin_src emacs-lisp :tangle yes
  (let ((interp-list '("node" "nodejs" "gjs" "rhino")))
    (mapc (lambda (interp-name)
            (starter-kit-set-interpreter-mode (purecopy interp-name) starter-kit-preferred-js-mode))
          interp-list)
    ;; if needed, replace all the existing file extension
    ;; associations with our preferred node
    (if (not (equal starter-kit-preferred-js-mode 'js-mode))
        (while (rassoc 'javascript-mode auto-mode-alist)
          (setf (cdr (rassoc 'javascript-mode auto-mode-alist)) starter-kit-preferred-js-mode))))
#+end_src
